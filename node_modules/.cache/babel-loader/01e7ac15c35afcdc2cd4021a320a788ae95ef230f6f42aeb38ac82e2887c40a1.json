{"ast":null,"code":"// eslint-disable-next-line no-unused-vars\nimport axios from 'axios';\n\n// eslint-disable-next-line no-unused-vars\nconst API_URL = 'http://localhost:8000/api/';\n\n// Helper function to get auth header\n// eslint-disable-next-line no-unused-vars\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('authToken');\n  return token ? {\n    Authorization: `Token ${token}`\n  } : {};\n};\n\n// First, let's fix the syntax error in the propertyService.js file\nconst propertyService = {\n  // Get all properties\n  getAllProperties: async () => {\n    try {\n      // For now, return mock data\n      const mockData = [{\n        id: 1,\n        title: 'Apartamento Alexa VI',\n        description: 'Hermoso apartamento con vista al mar',\n        price: 8000000,\n        location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\n        bedrooms: 3,\n        bathrooms: 0,\n        area: 77,\n        image: null,\n        featured: true\n      }, {\n        id: 2,\n        title: 'Edificio Osiris',\n        description: 'Edificio comercial en zona céntrica',\n        price: 500000,\n        location: 'Ensanche la Paz, Santo Domingo, R. D.',\n        bedrooms: 0,\n        bathrooms: 0,\n        area: 300,\n        image: null,\n        featured: true\n      }];\n\n      // Uncomment this code when backend is ready:\n      /*\r\n      const response = await axios.get(`${API_URL}properties/`);\r\n      return response.data;\r\n      */\n\n      return mockData;\n    } catch (error) {\n      console.error('Error fetching properties:', error);\n      throw error;\n    }\n  },\n  // Get property by ID\n  getPropertyById: async id => {\n    try {\n      // Uncomment this code when backend is ready:\n      /*\r\n      const response = await axios.get(`${API_URL}properties/${id}/`);\r\n      return response.data;\r\n      */\n\n      // For now, return mock data\n      const mockProperties = [{\n        id: 1,\n        title: 'Apartamento Alexa VI',\n        description: 'Hermoso apartamento con vista al mar',\n        price: 8000000,\n        location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\n        bedrooms: 3,\n        bathrooms: 0,\n        area: 77,\n        image: null,\n        featured: true\n      }, {\n        id: 2,\n        title: 'Edificio Osiris',\n        description: 'Edificio comercial en zona céntrica',\n        price: 500000,\n        location: 'Ensanche la Paz, Santo Domingo, R. D.',\n        bedrooms: 0,\n        bathrooms: 0,\n        area: 300,\n        image: null,\n        featured: true\n      }];\n      const property = mockProperties.find(p => p.id === parseInt(id));\n      if (!property) {\n        throw new Error('Property not found');\n      }\n      return property;\n    } catch (error) {\n      console.error(`Error fetching property ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create new property\n  createProperty: async propertyData => {\n    try {\n      // Uncomment this code when backend is ready:\n      /*\r\n      const headers = {\r\n        ...getAuthHeader(),\r\n        'Content-Type': 'multipart/form-data'\r\n      };\r\n      \r\n      const response = await axios.post(`${API_URL}properties/`, propertyData, { headers });\r\n      return response.data;\r\n      */\n\n      // For now, just log and return mock data\n      console.log('Creating property with data:', propertyData);\n      return {\n        id: 3,\n        ...propertyData\n      };\n    } catch (error) {\n      console.error('Error creating property:', error);\n      throw error;\n    }\n  },\n  // Update property\n  // En el método updateProperty, asegúrate de manejar correctamente la imagen\n  updateProperty: async (id, propertyData) => {\n    try {\n      // Si hay una imagen nueva, asegúrate de procesarla correctamente\n      let formData;\n      if (propertyData.image instanceof File) {\n        formData = new FormData();\n        // Añadir todos los campos al FormData\n        Object.keys(propertyData).forEach(key => {\n          if (key !== 'imagePreview') {\n            // No incluir la URL de previsualización\n            formData.append(key, propertyData[key]);\n          }\n        });\n      } else {\n        // Si no hay una nueva imagen, simplemente usa los datos como están\n        formData = propertyData;\n      }\n      console.log(`Updating property ${id} with data:`, propertyData);\n\n      // Para el modo de desarrollo, crea una URL para la imagen si existe\n      let imageUrl = null;\n      if (propertyData.image instanceof File) {\n        imageUrl = URL.createObjectURL(propertyData.image);\n      } else if (typeof propertyData.image === 'string' && propertyData.image) {\n        imageUrl = propertyData.image;\n      }\n      return {\n        id,\n        ...propertyData,\n        image: imageUrl // Asegúrate de devolver la URL de la imagen\n      };\n\n      /* Real implementation for when backend is ready:\r\n      const headers = {\r\n        ...getAuthHeader(),\r\n        'Content-Type': 'multipart/form-data'\r\n      };\r\n      \r\n      const response = await axios.put(`${API_URL}properties/${id}/`, formData, { headers });\r\n      return response.data;\r\n      */\n    } catch (error) {\n      console.error(`Error updating property ${id}:`, error);\n      throw error;\n    }\n  },\n  // Add this comma here - this was missing!\n\n  // Delete property\n  deleteProperty: async id => {\n    try {\n      // Uncomment this code when backend is ready:\n      /*\r\n      const headers = {\r\n        ...getAuthHeader()\r\n      };\r\n      \r\n      await axios.delete(`${API_URL}properties/${id}/`, { headers });\r\n      return true;\r\n      */\n\n      // For now, just log\n      console.log(`Deleting property ${id}`);\n      return true;\n    } catch (error) {\n      console.error(`Error deleting property ${id}:`, error);\n      throw error;\n    }\n  },\n  // Get featured properties\n  getFeaturedProperties: async () => {\n    try {\n      // Uncomment this code when backend is ready:\n      /*\r\n      const response = await axios.get(`${API_URL}properties/featured/`);\r\n      return response.data;\r\n      */\n\n      // For now, return mock data\n      const mockData = [{\n        id: 1,\n        title: 'Apartamento Alexa VI',\n        description: 'Hermoso apartamento con vista al mar',\n        price: 8000000,\n        location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\n        bedrooms: 3,\n        bathrooms: 0,\n        area: 77,\n        image: null,\n        featured: true\n      }, {\n        id: 2,\n        title: 'Edificio Osiris',\n        description: 'Edificio comercial en zona céntrica',\n        price: 500000,\n        location: 'Ensanche la Paz, Santo Domingo, R. D.',\n        bedrooms: 0,\n        bathrooms: 0,\n        area: 300,\n        image: null,\n        featured: true\n      }];\n      return mockData;\n    } catch (error) {\n      console.error('Error fetching featured properties:', error);\n      throw error;\n    }\n  }\n};\nexport default propertyService;","map":{"version":3,"names":["axios","API_URL","getAuthHeader","token","localStorage","getItem","Authorization","propertyService","getAllProperties","mockData","id","title","description","price","location","bedrooms","bathrooms","area","image","featured","error","console","getPropertyById","mockProperties","property","find","p","parseInt","Error","createProperty","propertyData","log","updateProperty","formData","File","FormData","Object","keys","forEach","key","append","imageUrl","URL","createObjectURL","deleteProperty","getFeaturedProperties"],"sources":["C:/Proyectos/BienesRaicesProyects/src/services/propertyService.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport axios from 'axios';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst API_URL = 'http://localhost:8000/api/';\r\n\r\n// Helper function to get auth header\r\n// eslint-disable-next-line no-unused-vars\r\nconst getAuthHeader = () => {\r\n  const token = localStorage.getItem('authToken');\r\n  return token ? { Authorization: `Token ${token}` } : {};\r\n};\r\n\r\n// First, let's fix the syntax error in the propertyService.js file\r\nconst propertyService = {\r\n  // Get all properties\r\n  getAllProperties: async () => {\r\n    try {\r\n      // For now, return mock data\r\n      const mockData = [\r\n        {\r\n          id: 1,\r\n          title: 'Apartamento Alexa VI',\r\n          description: 'Hermoso apartamento con vista al mar',\r\n          price: 8000000,\r\n          location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\r\n          bedrooms: 3,\r\n          bathrooms: 0,\r\n          area: 77,\r\n          image: null,\r\n          featured: true\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Edificio Osiris',\r\n          description: 'Edificio comercial en zona céntrica',\r\n          price: 500000,\r\n          location: 'Ensanche la Paz, Santo Domingo, R. D.',\r\n          bedrooms: 0,\r\n          bathrooms: 0,\r\n          area: 300,\r\n          image: null,\r\n          featured: true\r\n        }\r\n      ];\r\n      \r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const response = await axios.get(`${API_URL}properties/`);\r\n      return response.data;\r\n      */\r\n      \r\n      return mockData;\r\n    } catch (error) {\r\n      console.error('Error fetching properties:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get property by ID\r\n  getPropertyById: async (id) => {\r\n    try {\r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const response = await axios.get(`${API_URL}properties/${id}/`);\r\n      return response.data;\r\n      */\r\n      \r\n      // For now, return mock data\r\n      const mockProperties = [\r\n        {\r\n          id: 1,\r\n          title: 'Apartamento Alexa VI',\r\n          description: 'Hermoso apartamento con vista al mar',\r\n          price: 8000000,\r\n          location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\r\n          bedrooms: 3,\r\n          bathrooms: 0,\r\n          area: 77,\r\n          image: null,\r\n          featured: true\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Edificio Osiris',\r\n          description: 'Edificio comercial en zona céntrica',\r\n          price: 500000,\r\n          location: 'Ensanche la Paz, Santo Domingo, R. D.',\r\n          bedrooms: 0,\r\n          bathrooms: 0,\r\n          area: 300,\r\n          image: null,\r\n          featured: true\r\n        }\r\n      ];\r\n      \r\n      const property = mockProperties.find(p => p.id === parseInt(id));\r\n      if (!property) {\r\n        throw new Error('Property not found');\r\n      }\r\n      return property;\r\n    } catch (error) {\r\n      console.error(`Error fetching property ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Create new property\r\n  createProperty: async (propertyData) => {\r\n    try {\r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const headers = {\r\n        ...getAuthHeader(),\r\n        'Content-Type': 'multipart/form-data'\r\n      };\r\n      \r\n      const response = await axios.post(`${API_URL}properties/`, propertyData, { headers });\r\n      return response.data;\r\n      */\r\n      \r\n      // For now, just log and return mock data\r\n      console.log('Creating property with data:', propertyData);\r\n      return {\r\n        id: 3,\r\n        ...propertyData\r\n      };\r\n    } catch (error) {\r\n      console.error('Error creating property:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Update property\r\n  // En el método updateProperty, asegúrate de manejar correctamente la imagen\r\n  updateProperty: async (id, propertyData) => {\r\n    try {\r\n    // Si hay una imagen nueva, asegúrate de procesarla correctamente\r\n    let formData;\r\n    if (propertyData.image instanceof File) {\r\n      formData = new FormData();\r\n      // Añadir todos los campos al FormData\r\n      Object.keys(propertyData).forEach(key => {\r\n        if (key !== 'imagePreview') { // No incluir la URL de previsualización\r\n          formData.append(key, propertyData[key]);\r\n        }\r\n      });\r\n    } else {\r\n      // Si no hay una nueva imagen, simplemente usa los datos como están\r\n      formData = propertyData;\r\n    }\r\n    \r\n    console.log(`Updating property ${id} with data:`, propertyData);\r\n    \r\n    // Para el modo de desarrollo, crea una URL para la imagen si existe\r\n    let imageUrl = null;\r\n    if (propertyData.image instanceof File) {\r\n      imageUrl = URL.createObjectURL(propertyData.image);\r\n    } else if (typeof propertyData.image === 'string' && propertyData.image) {\r\n      imageUrl = propertyData.image;\r\n    }\r\n    \r\n    return {\r\n      id,\r\n      ...propertyData,\r\n      image: imageUrl // Asegúrate de devolver la URL de la imagen\r\n    };\r\n    \r\n    /* Real implementation for when backend is ready:\r\n    const headers = {\r\n      ...getAuthHeader(),\r\n      'Content-Type': 'multipart/form-data'\r\n    };\r\n    \r\n    const response = await axios.put(`${API_URL}properties/${id}/`, formData, { headers });\r\n    return response.data;\r\n    */\r\n    } catch (error) {\r\n      console.error(`Error updating property ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }, // Add this comma here - this was missing!\r\n  \r\n  // Delete property\r\n  deleteProperty: async (id) => {\r\n    try {\r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const headers = {\r\n        ...getAuthHeader()\r\n      };\r\n      \r\n      await axios.delete(`${API_URL}properties/${id}/`, { headers });\r\n      return true;\r\n      */\r\n      \r\n      // For now, just log\r\n      console.log(`Deleting property ${id}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Error deleting property ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get featured properties\r\n  getFeaturedProperties: async () => {\r\n    try {\r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const response = await axios.get(`${API_URL}properties/featured/`);\r\n      return response.data;\r\n      */\r\n      \r\n      // For now, return mock data\r\n      const mockData = [\r\n        {\r\n          id: 1,\r\n          title: 'Apartamento Alexa VI',\r\n          description: 'Hermoso apartamento con vista al mar',\r\n          price: 8000000,\r\n          location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\r\n          bedrooms: 3,\r\n          bathrooms: 0,\r\n          area: 77,\r\n          image: null,\r\n          featured: true\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Edificio Osiris',\r\n          description: 'Edificio comercial en zona céntrica',\r\n          price: 500000,\r\n          location: 'Ensanche la Paz, Santo Domingo, R. D.',\r\n          bedrooms: 0,\r\n          bathrooms: 0,\r\n          area: 300,\r\n          image: null,\r\n          featured: true\r\n        }\r\n      ];\r\n      \r\n      return mockData;\r\n    } catch (error) {\r\n      console.error('Error fetching featured properties:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default propertyService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}