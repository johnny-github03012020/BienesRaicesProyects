{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';// Default configuration values\nimport{jsx as _jsx}from\"react/jsx-runtime\";const defaultConfig={authRequired:true,adminAccess:{enabled:true,showAdminLink:true,adminPath:'/admin'},imageProcessing:{keepOriginal:true,compressionLevel:'medium',maxSize:5*1024*1024// 5MB\n},apiEndpoints:{properties:'http://localhost:8000/api/properties/',auth:'http://localhost:8000/api/auth/'},formValidation:{strictMode:false,validateOnChange:true}};const ConfigContext=/*#__PURE__*/createContext();export const ConfigProvider=_ref=>{let{children}=_ref;const[config,setConfig]=useState(defaultConfig);// Function to reset all configuration\nconst resetConfig=()=>{setConfig(defaultConfig);return defaultConfig;};// Function to update a specific configuration section\nconst updateConfig=(section,values)=>{setConfig({...config,[section]:{...config[section],...values}});};// Function to check if admin access should be shown\nconst shouldShowAdminAccess=()=>{const isAdmin=localStorage.getItem('isAdminUser')==='true';return config.adminAccess.enabled&&isAdmin&&config.adminAccess.showAdminLink;};// Function to generate a system code based on current state\nconst generateSystemCode=()=>{const isAuthenticated=!!localStorage.getItem('authToken');const environment=process.env.NODE_ENV==='production'?'2':'1';const component='10';// Frontend\nconst category=isAuthenticated?'01':'02';// Auth or Properties\nconst specificCode=isAuthenticated?'001':'002';return`${environment}${component}${category}${specificCode}`;};return/*#__PURE__*/_jsx(ConfigContext.Provider,{value:{config,resetConfig,updateConfig,generateSystemCode,shouldShowAdminAccess},children:children});};export const useConfig=()=>{const context=useContext(ConfigContext);if(context===undefined){console.error('useConfig must be used within a ConfigProvider');}return context||{config:defaultConfig,resetConfig:()=>defaultConfig,updateConfig:()=>{},generateSystemCode:()=>'10020001',shouldShowAdminAccess:()=>false};};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","defaultConfig","authRequired","adminAccess","enabled","showAdminLink","adminPath","imageProcessing","keepOriginal","compressionLevel","maxSize","apiEndpoints","properties","auth","formValidation","strictMode","validateOnChange","ConfigContext","ConfigProvider","_ref","children","config","setConfig","resetConfig","updateConfig","section","values","shouldShowAdminAccess","isAdmin","localStorage","getItem","generateSystemCode","isAuthenticated","environment","process","env","NODE_ENV","component","category","specificCode","Provider","value","useConfig","context","undefined","console","error"],"sources":["C:/Proyectos/BienesRaicesProyects/src/context/ConfigContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Default configuration values\r\nconst defaultConfig = {\r\n  authRequired: true,\r\n  adminAccess: {\r\n    enabled: true,\r\n    showAdminLink: true,\r\n    adminPath: '/admin'\r\n  },\r\n  imageProcessing: {\r\n    keepOriginal: true,\r\n    compressionLevel: 'medium',\r\n    maxSize: 5 * 1024 * 1024 // 5MB\r\n  },\r\n  apiEndpoints: {\r\n    properties: 'http://localhost:8000/api/properties/',\r\n    auth: 'http://localhost:8000/api/auth/'\r\n  },\r\n  formValidation: {\r\n    strictMode: false,\r\n    validateOnChange: true\r\n  }\r\n};\r\n\r\nconst ConfigContext = createContext();\r\n\r\nexport const ConfigProvider = ({ children }) => {\r\n  const [config, setConfig] = useState(defaultConfig);\r\n  \r\n  // Function to reset all configuration\r\n  const resetConfig = () => {\r\n    setConfig(defaultConfig);\r\n    return defaultConfig;\r\n  };\r\n  \r\n  // Function to update a specific configuration section\r\n  const updateConfig = (section, values) => {\r\n    setConfig({\r\n      ...config,\r\n      [section]: {\r\n        ...config[section],\r\n        ...values\r\n      }\r\n    });\r\n  };\r\n  \r\n  // Function to check if admin access should be shown\r\n  const shouldShowAdminAccess = () => {\r\n    const isAdmin = localStorage.getItem('isAdminUser') === 'true';\r\n    return config.adminAccess.enabled && isAdmin && config.adminAccess.showAdminLink;\r\n  };\r\n  \r\n  // Function to generate a system code based on current state\r\n  const generateSystemCode = () => {\r\n    const isAuthenticated = !!localStorage.getItem('authToken');\r\n    const environment = process.env.NODE_ENV === 'production' ? '2' : '1';\r\n    const component = '10'; // Frontend\r\n    const category = isAuthenticated ? '01' : '02'; // Auth or Properties\r\n    const specificCode = isAuthenticated ? '001' : '002';\r\n    \r\n    return `${environment}${component}${category}${specificCode}`;\r\n  };\r\n  \r\n  return (\r\n    <ConfigContext.Provider \r\n      value={{ \r\n        config, \r\n        resetConfig, \r\n        updateConfig,\r\n        generateSystemCode,\r\n        shouldShowAdminAccess\r\n      }}\r\n    >\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useConfig = () => {\r\n  const context = useContext(ConfigContext);\r\n  if (context === undefined) {\r\n    console.error('useConfig must be used within a ConfigProvider');\r\n  }\r\n  return context || { \r\n    config: defaultConfig, \r\n    resetConfig: () => defaultConfig,\r\n    updateConfig: () => {},\r\n    generateSystemCode: () => '10020001',\r\n    shouldShowAdminAccess: () => false\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}