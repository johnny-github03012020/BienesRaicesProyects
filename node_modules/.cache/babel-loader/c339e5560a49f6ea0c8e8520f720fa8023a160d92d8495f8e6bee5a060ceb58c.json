{"ast":null,"code":"// eslint-disable-next-line no-unused-vars\nimport axios from'axios';// eslint-disable-next-line no-unused-vars\nconst API_URL='http://localhost:8000/api/';// Helper function to get auth header\n// eslint-disable-next-line no-unused-vars\nconst getAuthHeader=()=>{const token=localStorage.getItem('authToken');return token?{Authorization:`Token ${token}`}:{};};// Función auxiliar para obtener todas las propiedades del localStorage\nconst getAllPropertiesFromStorage=async()=>{const storedProperties=localStorage.getItem('properties');return storedProperties?JSON.parse(storedProperties):[];};// Función para inicializar el almacenamiento local con datos de ejemplo si está vacío\nconst initializeLocalStorage=()=>{const storedProperties=localStorage.getItem('properties');if(!storedProperties){const initialProperties=[{id:1,title:'Apartamento Alexa VI',description:'Hermoso apartamento con vista al mar',price:8000000,location:'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',bedrooms:3,bathrooms:0,area:77,image:'/images/property1.jpg',featured:true},{id:2,title:'Edificio Osiris',description:'Edificio comercial en zona céntrica',price:500000,location:'Ensanche la Paz, Santo Domingo, R. D.',bedrooms:0,bathrooms:0,area:300,image:'/images/property2.jpg',featured:true}];localStorage.setItem('properties',JSON.stringify(initialProperties));console.log('Initialized localStorage with sample properties');}};// First, let's fix the syntax error in the propertyService.js file\nconst propertyService={// Get all properties\ngetAllProperties:async()=>{try{// Initialize localStorage if needed\ninitializeLocalStorage();// Get properties from localStorage\nconst properties=await getAllPropertiesFromStorage();return properties;}catch(error){console.error('Error fetching properties:',error);throw error;}},// Get property by ID\ngetPropertyById:async id=>{try{// Initialize localStorage if needed\ninitializeLocalStorage();// Get property from localStorage\nconst allProperties=await getAllPropertiesFromStorage();const property=allProperties.find(p=>p.id===parseInt(id));if(!property){throw new Error('Property not found');}return property;}catch(error){console.error(`Error fetching property ${id}:`,error);throw error;}},// Create new property\ncreateProperty:async propertyData=>{try{// Uncomment this code when backend is ready:\n/*\r\n      const headers = {\r\n        ...getAuthHeader(),\r\n        'Content-Type': 'multipart/form-data'\r\n      };\r\n      \r\n      const response = await axios.post(`${API_URL}properties/`, propertyData, { headers });\r\n      return response.data;\r\n      */// For now, just log and return mock data\nconsole.log('Creating property with data:',propertyData);return{id:3,...propertyData};}catch(error){console.error('Error creating property:',error);throw error;}},// Update property\nupdateProperty:async(id,propertyData)=>{try{console.log('Updating property with data:',propertyData);// Crear una copia para no modificar el original\nconst updatedData={...propertyData};let imageUrl=null;// Manejar la imagen según su tipo\nif(updatedData.image instanceof File){// Para desarrollo, convertimos el archivo a una cadena base64\n// Esto permite que la imagen persista en localStorage\nconst reader=new FileReader();imageUrl=await new Promise((resolve,reject)=>{reader.onloadend=()=>resolve(reader.result);reader.onerror=reject;reader.readAsDataURL(updatedData.image);});console.log('Converted image to base64 data URL');}else if(typeof updatedData.image==='string'){// Si ya es una cadena (URL o base64), usarla directamente\nimageUrl=updatedData.image;}// Inicializar localStorage si es necesario\ninitializeLocalStorage();// Actualizar los datos en localStorage para persistencia\nconst allProperties=await getAllPropertiesFromStorage();const propertyIndex=allProperties.findIndex(p=>p.id===parseInt(id));if(propertyIndex!==-1){allProperties[propertyIndex]={...allProperties[propertyIndex],...updatedData,id:parseInt(id),image:imageUrl,price:typeof updatedData.price==='string'?parseInt(updatedData.price):updatedData.price};localStorage.setItem('properties',JSON.stringify(allProperties));console.log('Updated properties in localStorage');}else{console.warn(`Property with ID ${id} not found in localStorage`);}// Devolver los datos actualizados\nreturn{...updatedData,id:parseInt(id),image:imageUrl};}catch(error){console.error('Error updating property:',error);throw error;}},// Delete property\ndeleteProperty:async id=>{try{// Uncomment this code when backend is ready:\n/*\r\n      const headers = {\r\n        ...getAuthHeader()\r\n      };\r\n      \r\n      await axios.delete(`${API_URL}properties/${id}/`, { headers });\r\n      return true;\r\n      */// For now, just log\nconsole.log(`Deleting property ${id}`);return true;}catch(error){console.error(`Error deleting property ${id}:`,error);throw error;}},// Get featured properties\ngetFeaturedProperties:async()=>{try{// Initialize localStorage if needed\ninitializeLocalStorage();// Get properties from localStorage and filter featured ones\nconst allProperties=await getAllPropertiesFromStorage();const featuredProperties=allProperties.filter(property=>property.featured);return featuredProperties;}catch(error){console.error('Error fetching featured properties:',error);throw error;}}};export default propertyService;","map":{"version":3,"names":["axios","API_URL","getAuthHeader","token","localStorage","getItem","Authorization","getAllPropertiesFromStorage","storedProperties","JSON","parse","initializeLocalStorage","initialProperties","id","title","description","price","location","bedrooms","bathrooms","area","image","featured","setItem","stringify","console","log","propertyService","getAllProperties","properties","error","getPropertyById","allProperties","property","find","p","parseInt","Error","createProperty","propertyData","updateProperty","updatedData","imageUrl","File","reader","FileReader","Promise","resolve","reject","onloadend","result","onerror","readAsDataURL","propertyIndex","findIndex","warn","deleteProperty","getFeaturedProperties","featuredProperties","filter"],"sources":["C:/Proyectos/BienesRaicesProyects/src/services/propertyService.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport axios from 'axios';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst API_URL = 'http://localhost:8000/api/';\r\n\r\n// Helper function to get auth header\r\n// eslint-disable-next-line no-unused-vars\r\nconst getAuthHeader = () => {\r\n  const token = localStorage.getItem('authToken');\r\n  return token ? { Authorization: `Token ${token}` } : {};\r\n};\r\n\r\n// Función auxiliar para obtener todas las propiedades del localStorage\r\nconst getAllPropertiesFromStorage = async () => {\r\n  const storedProperties = localStorage.getItem('properties');\r\n  return storedProperties ? JSON.parse(storedProperties) : [];\r\n};\r\n\r\n// Función para inicializar el almacenamiento local con datos de ejemplo si está vacío\r\nconst initializeLocalStorage = () => {\r\n  const storedProperties = localStorage.getItem('properties');\r\n  if (!storedProperties) {\r\n    const initialProperties = [\r\n      {\r\n        id: 1,\r\n        title: 'Apartamento Alexa VI',\r\n        description: 'Hermoso apartamento con vista al mar',\r\n        price: 8000000,\r\n        location: 'Urbanizacion Tropical, 7 1/2 Carret. Sanchez',\r\n        bedrooms: 3,\r\n        bathrooms: 0,\r\n        area: 77,\r\n        image: '/images/property1.jpg',\r\n        featured: true\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Edificio Osiris',\r\n        description: 'Edificio comercial en zona céntrica',\r\n        price: 500000,\r\n        location: 'Ensanche la Paz, Santo Domingo, R. D.',\r\n        bedrooms: 0,\r\n        bathrooms: 0,\r\n        area: 300,\r\n        image: '/images/property2.jpg',\r\n        featured: true\r\n      }\r\n    ];\r\n    localStorage.setItem('properties', JSON.stringify(initialProperties));\r\n    console.log('Initialized localStorage with sample properties');\r\n  }\r\n};\r\n\r\n// First, let's fix the syntax error in the propertyService.js file\r\nconst propertyService = {\r\n  // Get all properties\r\n  getAllProperties: async () => {\r\n    try {\r\n      // Initialize localStorage if needed\r\n      initializeLocalStorage();\r\n      \r\n      // Get properties from localStorage\r\n      const properties = await getAllPropertiesFromStorage();\r\n      return properties;\r\n    } catch (error) {\r\n      console.error('Error fetching properties:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get property by ID\r\n  getPropertyById: async (id) => {\r\n    try {\r\n      // Initialize localStorage if needed\r\n      initializeLocalStorage();\r\n      \r\n      // Get property from localStorage\r\n      const allProperties = await getAllPropertiesFromStorage();\r\n      const property = allProperties.find(p => p.id === parseInt(id));\r\n      \r\n      if (!property) {\r\n        throw new Error('Property not found');\r\n      }\r\n      return property;\r\n    } catch (error) {\r\n      console.error(`Error fetching property ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Create new property\r\n  createProperty: async (propertyData) => {\r\n    try {\r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const headers = {\r\n        ...getAuthHeader(),\r\n        'Content-Type': 'multipart/form-data'\r\n      };\r\n      \r\n      const response = await axios.post(`${API_URL}properties/`, propertyData, { headers });\r\n      return response.data;\r\n      */\r\n      \r\n      // For now, just log and return mock data\r\n      console.log('Creating property with data:', propertyData);\r\n      return {\r\n        id: 3,\r\n        ...propertyData\r\n      };\r\n    } catch (error) {\r\n      console.error('Error creating property:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Update property\r\n  updateProperty: async (id, propertyData) => {\r\n    try {\r\n      console.log('Updating property with data:', propertyData);\r\n      \r\n      // Crear una copia para no modificar el original\r\n      const updatedData = { ...propertyData };\r\n      let imageUrl = null;\r\n      \r\n      // Manejar la imagen según su tipo\r\n      if (updatedData.image instanceof File) {\r\n        // Para desarrollo, convertimos el archivo a una cadena base64\r\n        // Esto permite que la imagen persista en localStorage\r\n        const reader = new FileReader();\r\n        imageUrl = await new Promise((resolve, reject) => {\r\n          reader.onloadend = () => resolve(reader.result);\r\n          reader.onerror = reject;\r\n          reader.readAsDataURL(updatedData.image);\r\n        });\r\n        console.log('Converted image to base64 data URL');\r\n      } else if (typeof updatedData.image === 'string') {\r\n        // Si ya es una cadena (URL o base64), usarla directamente\r\n        imageUrl = updatedData.image;\r\n      }\r\n      \r\n      // Inicializar localStorage si es necesario\r\n      initializeLocalStorage();\r\n      \r\n      // Actualizar los datos en localStorage para persistencia\r\n      const allProperties = await getAllPropertiesFromStorage();\r\n      const propertyIndex = allProperties.findIndex(p => p.id === parseInt(id));\r\n      \r\n      if (propertyIndex !== -1) {\r\n        allProperties[propertyIndex] = {\r\n          ...allProperties[propertyIndex],\r\n          ...updatedData,\r\n          id: parseInt(id),\r\n          image: imageUrl,\r\n          price: typeof updatedData.price === 'string' ? parseInt(updatedData.price) : updatedData.price\r\n        };\r\n        \r\n        localStorage.setItem('properties', JSON.stringify(allProperties));\r\n        console.log('Updated properties in localStorage');\r\n      } else {\r\n        console.warn(`Property with ID ${id} not found in localStorage`);\r\n      }\r\n      \r\n      // Devolver los datos actualizados\r\n      return {\r\n        ...updatedData,\r\n        id: parseInt(id),\r\n        image: imageUrl\r\n      };\r\n    } catch (error) {\r\n      console.error('Error updating property:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Delete property\r\n  deleteProperty: async (id) => {\r\n    try {\r\n      // Uncomment this code when backend is ready:\r\n      /*\r\n      const headers = {\r\n        ...getAuthHeader()\r\n      };\r\n      \r\n      await axios.delete(`${API_URL}properties/${id}/`, { headers });\r\n      return true;\r\n      */\r\n      \r\n      // For now, just log\r\n      console.log(`Deleting property ${id}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Error deleting property ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get featured properties\r\n  getFeaturedProperties: async () => {\r\n    try {\r\n      // Initialize localStorage if needed\r\n      initializeLocalStorage();\r\n      \r\n      // Get properties from localStorage and filter featured ones\r\n      const allProperties = await getAllPropertiesFromStorage();\r\n      const featuredProperties = allProperties.filter(property => property.featured);\r\n      \r\n      return featuredProperties;\r\n    } catch (error) {\r\n      console.error('Error fetching featured properties:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default propertyService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}